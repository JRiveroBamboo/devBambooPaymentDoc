[{"body":"","excerpt":"","ref":"/docs/purchase-workflow/customer-types/anonymous-users.html","title":"Anonymous users"},{"body":"","excerpt":"","ref":"/docs/purchase-workflow/customer-types.html","title":"Customers"},{"body":"This section shows the available payment methods, currencies, and related information to be taken into account when processing in Argentina.\n","excerpt":"This section shows the available payment methods, currencies, and related information to be taken …","ref":"/docs/payment-methods/argentina.html","title":"Argentina"},{"body":"","excerpt":"","ref":"/docs/payment-methods/argentina/ar-cards.html","title":"Credit and Debit cards"},{"body":"","excerpt":"","ref":"/docs/payment-methods/brazil/br-cards.html","title":"Credit and Debit cards"},{"body":"","excerpt":"","ref":"/docs/payment-methods/chile/cl-cards.html","title":"Credit and Debit cards"},{"body":"","excerpt":"","ref":"/docs/payment-methods/colombia/co-cards.html","title":"Credit and Debit cards"},{"body":"","excerpt":"","ref":"/docs/payment-methods/mexico/mx-cards.html","title":"Credit and Debit cards"},{"body":"","excerpt":"","ref":"/docs/payment-methods/paraguay/py-cards.html","title":"Credit and Debit cards"},{"body":"","excerpt":"","ref":"/docs/payment-methods/peru/pe-cards.html","title":"Credit and Debit cards"},{"body":"","excerpt":"","ref":"/docs/payment-methods/uruguay/uy-cards.html","title":"Credit and Debit cards"},{"body":"Why using Bamboo Payouts? Dispersing funds to third parties in Latin American markets is complex. It involves having connections with banks in each country and several legal considerations.\nThe current model has been a restriction for businesses that do not have local operations and want to pay third parties from other countries.\nBamboo Payouts offers you a payment system to allow mass transfers to third parties, using API or dashboard, with updates on the status of transactions and notifications via e-mail to the you and your third parties.\nHow does Bamboo Payouts work? Using Bamboo Payouts, you can easily disburse the funds settled your account to local beneficiary accounts. The following image explains briefly the process.\nYou can configure the Payout fee to be assumed by you or by the payee. For more information about pricing, and activation of the services, contact our local experts.\nBenefits Our solution was created by industry experts. Coverage - our services is in 7 countries and counting!. Flexibility - Connect easy using our API. We offer alternative Payouts transfers, as Nequi in Colombia. Using the The payout fee can be assumed either by you or your payee. Coverage Country ISO Code Currency Local Bank Transfer Cash Instant Transfer Wallet Argentina AR USD Brazil BR USD Chile CL USD Colombia CO USD Mexico MX USD Peru PE USD Uruguay UY USD Considerations Take into account the following considerations when using Payouts feature according to the payee\u0026rsquo;s country to avoid rejections.\nArgentina The CBU/CVU cannot exceed 22 characters. Brazil The bank account cannot exceed 15 characters. The specific size and format depend on the bank of the payee. The branch of the bank account cannot exceed 4 characters or 5 characters for Banco do Brasil accounts. For Pix, the account number is the Document number (CPF or CNPJ) of the payee. Chile The bank account cannot exceed 16 characters. Colombia The bank account cannot exceed 17 characters. Mexico The CLABE number cannot exceed 18 characters and is also validated using a verification algorithm. Peru The bank account cannot exceed 20 characters. Uruguay The bank account cannot exceed 14 characters. ","excerpt":"Why using Bamboo Payouts? Dispersing funds to third parties in Latin American markets is complex. It …","ref":"/payouts/overview.html","title":"Overview"},{"body":"To navigate to Payout reports, open you Merchant console and select Payout then Payouts Report.\nIn this screen you have two sections. First, you have the search criteria where you can combine one or more attributes to search a given Payout. You have available the following attributes:\nPayout Id Reference Merchant Name Merchant Id Creation date USD Amount Payee Name Payee Doc Id Exchange rate Local Currency Amount Bank Code Bank Name Bank Branch Bank Account Account Type Country Status Payment date Status Update Reason Real bank rejection reason Payment Reason Second, you find the list of payouts requested. Where you have the following columns:\nColumn Description Id Unique number generated by Bamboo to identify the Payout. Reference Identifier you choose in the request to identify the Payout. Creation Date Date when the Payout was created in the system. Status Latest status of the payout. For more information, refer to Payout status. Payee Name of the third party benefit of the Payout. Country Country of the payee. USD Amount Amount of the Payout in US Dollars. Local Amount Amount of the Payout in the currency of the payee. To see the detail of a payout, just click it in the table. The following window appears.\nClick the More details button to see further details of the Payout and its status log.\n","excerpt":"To navigate to Payout reports, open you Merchant console and select Payout then Payouts Report.\nIn …","ref":"/payouts/payouts-merchant-console/reports.html","title":"Payout Reports"},{"body":"To learn more about Payouts, refer to this article.\nConfiguring the authentication All methods used in Payouts API requires an authentication header, which is configured using the following parameters.\nKey Value Comments Content-Type application/json This parameter causes the request to be sent in json format. Authorization Basic {{MerchantPrivateKey}} Sent the {{MerchantPrivateKey}} (your merchant identifier) and the word Basic.\nExample: Basic RVkeLrs86_iTzSMLvDtuyQ-1zqIcsmFGcoSzncn_uFvQnj7bhB3rtZg__ DigitalSignature {{DigitalSignature}} Signature to validate the transaction using HmacSHA256 algorithm. This header is only required for Payout creation. Signing the message The hash to be sent is built using the parameters country, amount, currency, and reference of the Request. The secret-key and the MerchantPrivateKey is provided to you when sing the onboarding contract with Bamboo.\nSignature sample code var json = JSON.parse(request.data); let signdata = {Country:json.country, Amount: json.amount,Currency:json.currency, Reference:json.reference, Type: json.type}; var data = JSON.stringify(json); var hexHash = CryptoJS.HmacSHA256(data, apiSignature); var hash = hexHash.toString(CryptoJS.enc.Hex); API methods Payouts API enable two main methods to be used during the request of Payouts.\nGet Bank list This method allows you to get the list of available banks in a given country\nRequest URL Use any to the following URLS according to your needs.\nProduction: https://payout-api.bamboopayment.com/api/Bank/country/{{Country}} Stage: https://payout-api.stage.bamboopayment.com/api/Bank/country/{{Country}} Where {{Country}} is the ISO code of the country you want to consult in format ISO 3166-2. Countries available for Payouts.\nResponse parameters Parameter Format Size Description id Integer Internal identification of the bank. countryIsoCode String 2 Country to which the bank belongs. bankCode String 4 Internal code of the bank used in the parameter payee.bankaccount.codebank when requesting a Payout. bankName String Name of the bank. Response example [ { \u0026#34;id\u0026#34;: 1, \u0026#34;countryIsoCode\u0026#34;: \u0026#34;CO\u0026#34;, \u0026#34;bankCode\u0026#34;: \u0026#34;1002\u0026#34;, \u0026#34;bankName\u0026#34;: \u0026#34;BANCO POPULAR\u0026#34; }, { \u0026#34;id\u0026#34;: 3, \u0026#34;countryIsoCode\u0026#34;: \u0026#34;CO\u0026#34;, \u0026#34;bankCode\u0026#34;: \u0026#34;1007\u0026#34;, \u0026#34;bankName\u0026#34;: \u0026#34;BANCOLOMBIA\u0026#34; }, { \u0026#34;id\u0026#34;: 4, \u0026#34;countryIsoCode\u0026#34;: \u0026#34;CO\u0026#34;, \u0026#34;bankCode\u0026#34;: \u0026#34;1009\u0026#34;, \u0026#34;bankName\u0026#34;: \u0026#34;CITIBANK\u0026#34; }, { ... } ] Payout request This method allows you to request one or more Payouts using the funds settled in your account.\nRequest URL Use any to the following URLS according to your needs.\nProduction: https://payout-api.bamboopayment.com/api/payout stage: https://payout-api.stage.bamboopayment.com/api/payout Request parameters The following table shows the mandatory and optional parameters to create a Payout for all the countries.\nField Type Mandatory? Description country String(2) Yes ISO code of the country in format ISO 3166-2.\nCountries available for Payouts. amount Integer Yes Amount of the payout, the format has two digits for decimals.\nExample 100 =\u0026gt; USD 1,00. currency String(3) Yes ISO code of the currency.\nOnly USD available. reason String No Description of the payment. reference String Yes Unique identifier of the Payout defined by you.\nMust be unique. type Integer Yes Payout type. Set any of the following values:\n1 for Cash2 for Bank Transfer3 for Wallet4 for PIX notification_Url String No Callback to notify the result of the payout payee.FirstName String Yes First Name of the Payee. payee.lastName String Yes Last Name of the Payee. payee.email String No Email address of the Payee. payee.phone String No Phone number of the Payee. payee.address String No Address of the Payee. payee.document.type String Yes Document type of the Payee.\nFind the document list here. payee.document.number String Yes Document number of the Payee. payee.bankaccount.number String Yes* Bank account number of the Payee.\nTake into account the following considerations:\nFor Argentina, set the CBU/CVU.For Mexico, set the CLABE number. payee.bankaccount.type Integer Yes* Account type of the Payee. Set 1 for Checking, and 2 for Savings. payee.bankaccount.codebank String Yes* Bank code of the Payee. payee.bankaccount.branch String No Branch code of the Payee\u0026rsquo;s bank. This field applies only for Brazil and is mandatory when using Bank transfer as Payout type. * When using Bank transfer, these parameters are mandatory for ALL countries. For PIX, the object payee.bankaccount and its parameters must not be present in the request.\nRequest example Refer to the corresponding tab according to the payee\u0026rsquo;s country.\nArgentina Brazil Chile Colombia Mexico Peru Uruguay { \u0026#34;country\u0026#34;: \u0026#34;AR\u0026#34;, \u0026#34;amount\u0026#34;: 1000, \u0026#34;currency\u0026#34;: \u0026#34;USD\u0026#34;, \u0026#34;reason\u0026#34;: \u0026#34;string\u0026#34;, \u0026#34;reference\u0026#34;: \u0026#34;PayOut34\u0026#34;, \u0026#34;type\u0026#34;: 2, \u0026#34;payee\u0026#34;: { \u0026#34;firstName\u0026#34;: \u0026#34;Sara\u0026#34;, \u0026#34;lastName\u0026#34;: \u0026#34;Jáquez\u0026#34;, \u0026#34;email\u0026#34;: \u0026#34;sarasouez@mail.com\u0026#34;, \u0026#34;phone\u0026#34;: \u0026#34;099999999\u0026#34;, \u0026#34;address\u0026#34;: \u0026#34;Francisco 51 Gral. Ximena, AR-H 0376\u0026#34;, \u0026#34;document\u0026#34;: { \u0026#34;type\u0026#34;: \u0026#34;DNI\u0026#34;, \u0026#34;number\u0026#34;: \u0026#34;123456789\u0026#34; }, \u0026#34;bankAccount\u0026#34;: { \u0026#34;number\u0026#34;: \u0026#34;0071234567890123456789\u0026#34;, \u0026#34;type\u0026#34;: 1, \u0026#34;codeBank\u0026#34;: \u0026#34;7\u0026#34; } }, \u0026#34;notification_Url\u0026#34;: \u0026#34;string\u0026#34; } As mentioned before, the object payee.bankaccount must not be present in the request. Therefore, when using PIX you need to send the request as follows:\n{ \u0026#34;country\u0026#34;: \u0026#34;BR\u0026#34;, \u0026#34;amount\u0026#34;: 100, \u0026#34;currency\u0026#34;: \u0026#34;USD\u0026#34;, \u0026#34;reason\u0026#34;: \u0026#34;string\u0026#34;, \u0026#34;reference\u0026#34;: \u0026#34;PayOut34\u0026#34;, \u0026#34;type\u0026#34;: 4, \u0026#34;payee\u0026#34;: { \u0026#34;firstName\u0026#34;: \u0026#34;Tiago\u0026#34;, \u0026#34;lastName\u0026#34;: \u0026#34;Costa\u0026#34;, \u0026#34;email\u0026#34;: \u0026#34;tcosta@mail.com\u0026#34;, \u0026#34;phone\u0026#34;: \u0026#34;92799322\u0026#34;, \u0026#34;address\u0026#34;: \u0026#34;55489-272, Travessa Eduardo, 90 Esteves do Norte - CE\u0026#34;, \u0026#34;document\u0026#34;: { \u0026#34;type\u0026#34;: \u0026#34;CPF\u0026#34;, \u0026#34;number\u0026#34;: \u0026#34;54562271779\u0026#34; } }, \u0026#34;notification_Url\u0026#34;: \u0026#34;string\u0026#34; } When using Bank transfer you need to send the request as follows:\n{ \u0026#34;country\u0026#34;: \u0026#34;BR\u0026#34;, \u0026#34;amount\u0026#34;: 100, \u0026#34;currency\u0026#34;: \u0026#34;USD\u0026#34;, \u0026#34;reason\u0026#34;: \u0026#34;string\u0026#34;, \u0026#34;reference\u0026#34;: \u0026#34;PayOut34\u0026#34;, \u0026#34;type\u0026#34;: 2, \u0026#34;payee\u0026#34;: { \u0026#34;firstName\u0026#34;: \u0026#34;Tiago\u0026#34;, \u0026#34;lastName\u0026#34;: \u0026#34;Costa\u0026#34;, \u0026#34;email\u0026#34;: \u0026#34;tcosta@mail.com\u0026#34;, \u0026#34;phone\u0026#34;: \u0026#34;92799322\u0026#34;, \u0026#34;address\u0026#34;: \u0026#34;55489-272, Travessa Eduardo, 90 Esteves do Norte - CE\u0026#34;, \u0026#34;document\u0026#34;: { \u0026#34;type\u0026#34;: \u0026#34;CPF\u0026#34;, \u0026#34;number\u0026#34;: \u0026#34;54562271779\u0026#34; }, \u0026#34;bankAccount\u0026#34;: { \u0026#34;number\u0026#34;: \u0026#34;12345678901234-5\u0026#34;, \u0026#34;type\u0026#34;: 1, \u0026#34;codeBank\u0026#34;: \u0026#34;104\u0026#34;, \u0026#34;branch\u0026#34;: \u0026#34;1234\u0026#34; } }, \u0026#34;notification_Url\u0026#34;: \u0026#34;string\u0026#34; } { \u0026#34;country\u0026#34;: \u0026#34;CL\u0026#34;, \u0026#34;amount\u0026#34;: 1000, \u0026#34;currency\u0026#34;: \u0026#34;USD\u0026#34;, \u0026#34;reason\u0026#34;: \u0026#34;string\u0026#34;, \u0026#34;reference\u0026#34;: \u0026#34;PayOut34\u0026#34;, \u0026#34;type\u0026#34;: 2, \u0026#34;payee\u0026#34;: { \u0026#34;firstName\u0026#34;: \u0026#34;Mercedes\u0026#34;, \u0026#34;lastName\u0026#34;: \u0026#34;Garrido\u0026#34;, \u0026#34;email\u0026#34;: \u0026#34;merceddo@mail.com\u0026#34;, \u0026#34;phone\u0026#34;: \u0026#34;099999999\u0026#34;, \u0026#34;address\u0026#34;: \u0026#34;Camino Franco, 13, Ático 4º, 93631, L\u0026#39; Garay\u0026#34;, \u0026#34;document\u0026#34;: { \u0026#34;type\u0026#34;: \u0026#34;CI\u0026#34;, \u0026#34;number\u0026#34;: \u0026#34;12345678\u0026#34; }, \u0026#34;bankAccount\u0026#34;: { \u0026#34;number\u0026#34;: \u0026#34;1234567890123450\u0026#34;, \u0026#34;type\u0026#34;: 1, \u0026#34;codeBank\u0026#34;: \u0026#34;1\u0026#34; } }, \u0026#34;notification_Url\u0026#34;: \u0026#34;string\u0026#34; } { \u0026#34;country\u0026#34;: \u0026#34;CO\u0026#34;, \u0026#34;amount\u0026#34;: 100, \u0026#34;currency\u0026#34;: \u0026#34;USD\u0026#34;, \u0026#34;reason\u0026#34;: \u0026#34;string\u0026#34;, \u0026#34;reference\u0026#34;: \u0026#34;PayOut34\u0026#34;, \u0026#34;type\u0026#34;: 2, \u0026#34;payee\u0026#34;: { \u0026#34;firstName\u0026#34;: \u0026#34;Juan\u0026#34;, \u0026#34;lastName\u0026#34;: \u0026#34;Perez\u0026#34;, \u0026#34;email\u0026#34;: \u0026#34;jperez@mail.com\u0026#34;, \u0026#34;phone\u0026#34;: \u0026#34;099999999\u0026#34;, \u0026#34;address\u0026#34;: \u0026#34;Cra 23 # 123-45 Apto 601\u0026#34;, \u0026#34;document\u0026#34;: { \u0026#34;type\u0026#34;: \u0026#34;CC\u0026#34;, \u0026#34;number\u0026#34;: \u0026#34;11111111\u0026#34; }, \u0026#34;bankAccount\u0026#34;: { \u0026#34;number\u0026#34;: \u0026#34;2288\u0026#34;, \u0026#34;type\u0026#34;: 1, \u0026#34;codeBank\u0026#34;: \u0026#34;1007\u0026#34; } }, \u0026#34;notification_Url\u0026#34;: \u0026#34;string\u0026#34; } { \u0026#34;country\u0026#34;: \u0026#34;MX\u0026#34;, \u0026#34;amount\u0026#34;: 1000, \u0026#34;currency\u0026#34;: \u0026#34;USD\u0026#34;, \u0026#34;reason\u0026#34;: \u0026#34;string\u0026#34;, \u0026#34;reference\u0026#34;: \u0026#34;PayOut34\u0026#34;, \u0026#34;type\u0026#34;: 2, \u0026#34;payee\u0026#34;: { \u0026#34;firstName\u0026#34;: \u0026#34;Rubén\u0026#34;, \u0026#34;lastName\u0026#34;: \u0026#34;Torres\u0026#34;, \u0026#34;email\u0026#34;: \u0026#34;rubentres@mail.com\u0026#34;, \u0026#34;phone\u0026#34;: \u0026#34;01 55 5601 7965\u0026#34;, \u0026#34;address\u0026#34;: \u0026#34;Coyoacan 2000\u0026#34;, \u0026#34;document\u0026#34;: { \u0026#34;type\u0026#34;: \u0026#34;CURP\u0026#34;, \u0026#34;number\u0026#34;: \u0026#34;OEAF771012HMCRGR09\u0026#34; }, \u0026#34;bankAccount\u0026#34;: { \u0026#34;number\u0026#34;: \u0026#34;123456789012345678\u0026#34;, \u0026#34;type\u0026#34;: 1, \u0026#34;codeBank\u0026#34;: \u0026#34;2\u0026#34; } }, \u0026#34;notification_Url\u0026#34;: \u0026#34;string\u0026#34; } { \u0026#34;country\u0026#34;: \u0026#34;PE\u0026#34;, \u0026#34;amount\u0026#34;: 1000, \u0026#34;currency\u0026#34;: \u0026#34;USD\u0026#34;, \u0026#34;reason\u0026#34;: \u0026#34;string\u0026#34;, \u0026#34;reference\u0026#34;: \u0026#34;PayOut34\u0026#34;, \u0026#34;type\u0026#34;: 2, \u0026#34;payee\u0026#34;: { \u0026#34;firstName\u0026#34;: \u0026#34;Ornela\u0026#34;, \u0026#34;lastName\u0026#34;: \u0026#34;Olivera\u0026#34;, \u0026#34;email\u0026#34;: \u0026#34;ornelera@mail.com\u0026#34;, \u0026#34;phone\u0026#34;: \u0026#34;099999999\u0026#34;, \u0026#34;address\u0026#34;: \u0026#34;Cl. Jesús Bueno # 64 Dpto. 229\u0026#34;, \u0026#34;document\u0026#34;: { \u0026#34;type\u0026#34;: \u0026#34;DNI\u0026#34;, \u0026#34;number\u0026#34;: \u0026#34;12345678\u0026#34; }, \u0026#34;bankAccount\u0026#34;: { \u0026#34;number\u0026#34;: \u0026#34;11487349\u0026#34;, \u0026#34;type\u0026#34;: 1, \u0026#34;codeBank\u0026#34;: \u0026#34;2\u0026#34; } }, \u0026#34;notification_Url\u0026#34;: \u0026#34;string\u0026#34; } { \u0026#34;country\u0026#34;: \u0026#34;UY\u0026#34;, \u0026#34;amount\u0026#34;: 1000, \u0026#34;currency\u0026#34;: \u0026#34;USD\u0026#34;, \u0026#34;reason\u0026#34;: \u0026#34;string\u0026#34;, \u0026#34;reference\u0026#34;: \u0026#34;PayOut34\u0026#34;, \u0026#34;type\u0026#34;: 2, \u0026#34;payee\u0026#34;: { \u0026#34;firstName\u0026#34;: \u0026#34;Daniel\u0026#34;, \u0026#34;lastName\u0026#34;: \u0026#34;Lorenzo\u0026#34;, \u0026#34;email\u0026#34;: \u0026#34;danielzo@mail.com\u0026#34;, \u0026#34;phone\u0026#34;: \u0026#34;999999999\u0026#34;, \u0026#34;address\u0026#34;: \u0026#34;12900 Montevideo\u0026#34;, \u0026#34;document\u0026#34;: { \u0026#34;type\u0026#34;: \u0026#34;CI\u0026#34;, \u0026#34;number\u0026#34;: \u0026#34;38067788\u0026#34; }, \u0026#34;bankAccount\u0026#34;: { \u0026#34;number\u0026#34;: \u0026#34;12345678912345\u0026#34;, \u0026#34;type\u0026#34;: 2, \u0026#34;codeBank\u0026#34;: \u0026#34;999\u0026#34;, \u0026#34;branch\u0026#34;: \u0026#34;1\u0026#34; } }, \u0026#34;notification_Url\u0026#34;: \u0026#34;string\u0026#34; } Responses Ok: HttpCode 200.\nMessage received correctly, at this point the Payout starts to be processed Response body\n{ \u0026#34;payoutId\u0026#34;: 145, \u0026#34;status\u0026#34;: 5, \u0026#34;statusDescription\u0026#34;: \u0026#34;Received\u0026#34;, \u0026#34;reference\u0026#34;: \u0026#34;PayOut34\u0026#34;, \u0026#34;errors\u0026#34;: [], \u0026#34;statusCode\u0026#34;: 200 } Where: Field Description payoutId Internal identifier of the Payout. status Internal code of the current status of the Payout. statusDescription Current status of the Payout. Refer to this article to learn more about Payout status. reference Unique identifier of the Payout defined by you when the Payout was requested. errors Errors that may appear statusCode HTTP code of the response. Unauthorized: HttpCode 401.\nAuthorization error. Response body\n{ \u0026#34;statusCode\u0026#34;: 401 } BadRequest: HttpCode HttpCode 400.\nThe validation of the message failed and the payout is Declined. Response body\n{ \u0026#34;errors\u0026#34;: [ { \u0026#34;ErrorCode\u0026#34;: \u0026#34;ExactLengthValidator\u0026#34;, \u0026#34;PropertyName\u0026#34;: \u0026#34;Country\u0026#34;, \u0026#34;Message\u0026#34;: \u0026#34;\u0026#39;Country\u0026#39; must be 2 characters in length. You entered 1 characters.\u0026#34; } ], \u0026#34;statusCode\u0026#34;: 400 } Conflict - Declined: HttpCode HttpCode 409.\nThe validation of the message was successful but the payout is Declined due to business rules. Response body\n{ \u0026#34;payoutId\u0026#34;: 1, \u0026#34;status\u0026#34;: 8, \u0026#34;statusDescription\u0026#34;: \u0026#34;Declined\u0026#34;, \u0026#34;reference\u0026#34;: \u0026#34;PayOut567\u0026#34;, \u0026#34;errors\u0026#34;: [ { \u0026#34;ErrorCode\u0026#34;: \u0026#34;B101\u0026#34;, \u0026#34;PropertyName\u0026#34;: \u0026#34;BankAccount\u0026#34;, \u0026#34;Message\u0026#34;: \u0026#34;BankAccount invalid\u0026#34; } ], \u0026#34;statusCode\u0026#34;: 409 } Obtaining a Payout This method allows you to retrieve the information of a Payout. You can retrieve the payouts by using either the generated identification (ID) or by using the reference that you provided when requesting the Payout.\nRequest URL Use any to the following URLS according to your needs.\nProduction: https://payout-api.bamboopayment.com/api/payout Stage: https://payout-api.stage.bamboopayment.com/api/payout To get the payout, include the following endpoints according to your needs.\nUsing Payout ID: {{URL}}/api/Payout/{{PayoutId}} Using Payout Reference: {{URL}}/api/Payout/reference/{{PayoutReference}} Response parameters Parameter Format Description payoutId Integer Internal identification of the payout. reference String Unique identifier of the Payout defined by you when the Payout was requested. isoCountry String ISO code of the country in format ISO 3166-2. created Date Time Date when the Payout was requested. lastUpdate Date Time Date of the last update of the Payout was. status Integer Internal code of the current status of the Payout. statusDescription String Current status of the Payout. Refer to this article to learn more about Payout status. errorCode String Internal code of the error for the declined Payout. errorDescription String Error description for declined Payouts. amount Object Value and currency requested in the payout. localAmount Object Value and currency requested in the payout in local currency. exchangeRate Numeric Conversion value used in the Payout. payee Object Information of the recipient or beneficiary of the Payout. Response example { \u0026#34;payoutId\u0026#34;: 1100, \u0026#34;reference\u0026#34;: \u0026#34;QA-545\u0026#34;, \u0026#34;isoCountry\u0026#34;: \u0026#34;CO\u0026#34;, \u0026#34;created\u0026#34;: \u0026#34;2023-06-02T15:15:34.475614Z\u0026#34;, \u0026#34;lastUpdate\u0026#34;: \u0026#34;2023-06-02T15:20:18.1507484Z\u0026#34;, \u0026#34;status\u0026#34;: 1, \u0026#34;statusDescription\u0026#34;: \u0026#34;Paid\u0026#34;, \u0026#34;errorCode\u0026#34;: null, \u0026#34;errorDescription\u0026#34;: null, \u0026#34;amount\u0026#34;: { \u0026#34;value\u0026#34;: 10.0, \u0026#34;isoCurrency\u0026#34;: \u0026#34;USD\u0026#34; }, \u0026#34;localAmount\u0026#34;: { \u0026#34;value\u0026#34;: 42843.0, \u0026#34;isoCurrency\u0026#34;: \u0026#34;COP\u0026#34; }, \u0026#34;exchangeRate\u0026#34;: 4394.23, \u0026#34;payee\u0026#34;: { \u0026#34;firstName\u0026#34;: \u0026#34;Paul\u0026#34;, \u0026#34;lastName\u0026#34;: \u0026#34;Doe\u0026#34;, \u0026#34;email\u0026#34;: \u0026#34;pauld@test.com\u0026#34;, \u0026#34;phone\u0026#34;: \u0026#34;099999999\u0026#34;, \u0026#34;address\u0026#34;: \u0026#34;address\u0026#34;, \u0026#34;document\u0026#34;: { \u0026#34;number\u0026#34;: \u0026#34;11111111\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;CC\u0026#34; } } } ","excerpt":"To learn more about Payouts, refer to this article.\nConfiguring the authentication All methods used …","ref":"/payouts/payouts-api/using-payouts-api.html","title":"Using Payouts API"},{"body":"TODO\n","excerpt":"TODO","ref":"/docs/forms/checkout-form.html","title":"Checkout Form"},{"body":"Acquirer An acquirer is a payment facilitator that allows you to perform digital payments. Furthermore, the acquirer is the responsible of the payments and manages the settlement to your banking account.\nAPI An API (from the acronym Application Programming Interface) is a set of methods and definitions that allows you to interact with a system through some input data. In our case, the API is defined to allow you process the information of a transaction to receive the response related to it.\nAuthentication Authentication is the procedure to validate the identity of a merchant. All merchants integrated with our platform receive a pair of keys for each associated account Private Account Key and Public Account Key.\nEach one of these keys identifies the merchant account in our system in each transaction performed to determine whether the merchant is authorized to operate and what are the conditions of the integration (For example, what payment methods are enabled for the merchant).\nPrivate Account Key The Private Account Key is a unique identifier that must be attached to each private request (server to server) where critical operations are available, such as initiating or confirming a transaction, accessing merchant transaction information, creating or deleting subscription plans, etc.\nImportant The Private Account Key must not be shared or publicly exposed at any time, to not compromise the security of the integration. It is the merchant’s responsibility to keep it safe.\nPublic Account Key The Public Account key is unique identifier that must be attached to each public request (made from the web interface) for query operations or for data capture request.\nFurthermore, this key is also used when invoking the PWCheckout Javascript library.\nCheckout The checkout is the form where your customers select the payment method they want to use to complete the payment. According to the payment method, this form allows you to collect its information and send it to process the transaction.\nCVV CVV stands for Card Verification Value. It is a three- or four-digit security code of the credit or debit cards. The CVV is an additional security measure to verify that the person making an online or over-the-phone transaction has physical possession of the card.\nEnvironment The Environment is the set of software and resources that allows you to process the transactions. Depending on its type, the environment has real or test data and information. Our platform has two separate environments: Stage and Production.\nStage This environment allows you to perform testing tasks. Here, the transactions never reach the real systems of the payment method providers. It\u0026rsquo;s a safe way to try out tasks and flows.\nBase URL: https://api.stage.bamboopayment.com. Production This environment allows you to perform real transactions and they are processed by the actual system of the payment methods you have. Before starting to process transactions in this environment, it\u0026rsquo;s strongly recommended to test in Stage.\nBase URL: https://api.bamboopayment.com. Note Throughout our documentation, we refer to the URLs where the services are exposed as {environment_api}, this must be replaced by the URL corresponding to the environment where you are working.\nForm A Form is a web component that allows you to embed a set of fields to tokenize a card or perform a purchase using a payment method. For more information, refer to Forms.\nFX Service Foreign Exchange or FX refers to the current rate to convert one country\u0026rsquo;s currency to another. This value is updated according to destination country regulations.\nMerchant and accounts A Merchant is the business who hires Bamboo Payment to receive electronical payments using any of the models available.\nAn Account is the segmentation of the merchant\u0026rsquo;s business. For example:\nProcessing countries Branches Business Lines Payment methods Merchant codes provided by card processors Business By default, a merchant who hires Bamboo System receives a Merchant Identificator and an Account that allows them to process transactions. Then, the merchants are free to create as many accounts as they need to meet business requirements.\nNote For settlement and billing purposes, Bamboo Payment will consider the total of the transactions made by all the accounts of a merchant.\nCrossboder merchant A Crossboder merchant is a business that is not located in the processing country. For example, a business who is legally constituted in United States but it has operations in Uruguay, Argentina, and Brazil.\nThese merchants process under the Payfac model and can process in USD or local currency.\nLocal merchant A Local merchant is a business that is located in the same country where they process.\nThese merchants can process under the Payfac model or Gateway model using local currency.\nGateway model In the Gateway model, the acquirer or payment method pays directly to the accounts of the merchant. In this model, merchant and acquirer (or payment method) implements their own settlement process.\nPayfac model Refers to a Payment Facilitator model, in which the merchant is represented as a Bamboo sub-merchant with whom they sign a commercial agreement. For settlement in this model, the acquirer or payment facilitator makes payment to Bamboo and Bamboo pays the merchant.\nTenant A Tenant refers to the processing channel in Bamboo which can be Crossborder (operates in multiple countries and uses the conversion rate) or local.\nTokenization When referring to data security, tokenization is the process of changing a sensitive element with its non-sensitive equivalent. This non-sensitive element, known as the token, is generated through the tokenization process. The token itself is meaningless and worthless, except for the entity that created it. In the event of a security incident that allows the theft of these numbers, they will be of no value to the thief as they cannot be used for their own purposes.\nSince the token is a reference or identifier assigned to a stored card by the system, it is unique for each pair of \u0026ldquo;merchant/token\u0026rdquo;. Therefore, when a customer registers their card with two different merchants, each merchant will receive a different token. This makes it impossible for a merchant to use the tokens from one customer for any other purpose.\n","excerpt":"Acquirer An acquirer is a payment facilitator that allows you to perform digital payments. …","ref":"/docs/getting-started/concepts.html","title":"Concepts"},{"body":"Configuring the authentication All methods used in Purchase API requires an authentication header, which is configured using the following parameters.\nKey Value Comments Content-Type application/json This parameter causes the request to be sent in json format. Authorization Basic {{MerchantPrivateKey}} Sent the {{MerchantPrivateKey}} (your merchant identifier) and the word Basic.\nExample: Basic RVkeLrs86_iTzSMLvDtuyQ-1zqIcsmFGcoSzncn_uFvQnj7bhB3rtZg__ Setting the language of the response codes You can receive the error description by relying on localization features. To do this, you need to send the lang header in your integration, using any of the following languages in ISO 639-1 format.\nCode Language en English.\nThis is the default language. If you don\u0026rsquo;t send this header or set a non-existent language, you will receive errors in this language. es Spanish. pt Portuguese. Purchase API methods The operations exposed by the Purchase API allows you to performs several actions over Purchases. Ypu have available the following methods.\nCreate a purchase Create a purchase Create a basic purchase in Bamboo Payment.\nRequest URL You need to invoke a POST request to the following URLs according to your needs.\nProduction: https://secure-api.bamboopayment.com/v1/api/purchase Stage: https://secure-api.stage.bamboopayment.com/v1/api/purchase Request parameters Parameter Type Description Required? PaymentMediaId integer Corresponds to the Id of the payment method you want to use. This parameter is only for Alternative payment methods (transfer, cash and processing that requires customer redirection). No 1 TrxToken string Token that identifies the customer\u0026rsquo;s card. No 1 Order string Order number generated by the merchant. Yes Amount number Amount of the purchase. This value must be greater than zero..\nIf you require to include decimals in the amount, concatenate the decimal places without de decimal point. Example 12,25 \u0026gt; 1225. Yes Currency string Currency of the purchase, according to ISO-4217. Yes Installments integer Number of payments in which is divided a credit card purchase. No Capture boolean Defines whether the purchase should be performed in one or two steps.2\nIf false, only the authorization is processed and the purchase is pre-authorized pending final confirmation through the commit and rollback calls.If true, the transaction is authorized and captured (committed). No Customer object The Customer object is used to provide the data of the customer who performs the purchase. Yes Customer. CommerceCustomerId string Customer identifier.\nThis value is generated and used internally by the merchant to identify the customer within the Bamboo Payment platform. No Notes 1 The PaymentMediaId and TrxToken fields are not required. Nevertheless, it\u0026rsquo;s mandatory to send one of them depending on the flow you want to use.\n2 Pre-authorization feature may not be supported by all the payment methods. Review the Countries and payment methods section to check availability.\nResponse parameters Parameter Type Description ","excerpt":"Configuring the authentication All methods used in Purchase API requires an authentication header, …","ref":"/docs/purchase-workflow/purchases/purchase-operations.html","title":"Operations"},{"body":"Overview Using our platform, you can offer to your customers an improved payment experience, being able to request card details as if it were on your own page or mobile application through our Checkout Form.\nYou can also request the data only once and store a token associated with the card that the customer entered securely on our platform.\nPCI-DSS Our platform is certified PCI-DSS Level 1, which allows us to process card numbers and other sensitive customer authentication data.\nThe Checkout Form is specially designed to be embedded in your pages or mobile applications, you can now accept payments without receiving confidential information such as customer data, provide security to your customers, and ease of use.\nGetting started Follow this steps to start processing payments with Bamboo Payments:\nSign Up.\nCreate your merchant account contacting our sales representatives.\nGet Credentials.\nAfter your account has been activated, you receive the API Keys credentials to have access to the STAGE Environment.\nIntegrate the APIs.\nFollow the instructions over this documentation to integrate our payments APIs. In order to move your account from STAGE to PRODUCTION, you need to follow the homologation process.\nGo Live.\nOnce you have completed the tests required in step 3, request the Go Live with our support team.\nProcess payments.\nOnce you have your production credentials, you can switch to the PRODUCTION environment and start processing your payments!\nDon't get stuck! In case you have any technical doubts or require any further information, please feel free to contact our support team for assistance.\n","excerpt":"Overview Using our platform, you can offer to your customers an improved payment experience, being …","ref":"/docs/getting-started.html","title":"Getting started"},{"body":"","excerpt":"","ref":"/docs/purchase-workflow/customer-types/registered-users.html","title":"Registered users"},{"body":"To navigate to the Payout Balance report, open you Merchant console and expand Payout then Payouts Balance.\nIn this screen you have two sections. The first section, shows the Balance types of your account.\nFor more information, refer to Payout Balances.\nThe second section, show the movements of your balance. Where you have the following columns:\nColumn Description Payout ID Unique number generated by Bamboo to identify the Payout. Date Date when the Payout movement was created in the system. Type Type of movement applied in the payout. USD Amount Amount of the movement, credit (such as cash outs, fees, etc.) movements are displayed in red and debit movements (such as deposits) are displayed in green. Total Balance Result balance after the movement is applied. You can include filters by clicking the Filters button, where you can filter by date range of the movement or any of its parameters.\n","excerpt":"To navigate to the Payout Balance report, open you Merchant console and expand Payout then Payouts …","ref":"/payouts/payouts-merchant-console/balances.html","title":"Payouts Balance movements"},{"body":"","excerpt":"","ref":"/docs/payment-methods/argentina/ar-apm.html","title":"Alternative Payment Methods"},{"body":"","excerpt":"","ref":"/docs/payment-methods/brazil/br-apm.html","title":"Alternative Payment Methods"},{"body":"","excerpt":"","ref":"/docs/payment-methods/chile/cl-apm.html","title":"Alternative Payment Methods"},{"body":"","excerpt":"","ref":"/docs/payment-methods/colombia/co-apm.html","title":"Alternative Payment Methods"},{"body":"","excerpt":"","ref":"/docs/payment-methods/ecuador/ec-apm.html","title":"Alternative Payment Methods"},{"body":"","excerpt":"","ref":"/docs/payment-methods/mexico/mx-apm.html","title":"Alternative Payment Methods"},{"body":"","excerpt":"","ref":"/docs/payment-methods/paraguay/py-apm.html","title":"Alternative Payment Methods"},{"body":"","excerpt":"","ref":"/docs/payment-methods/peru/pe-apm.html","title":"Alternative Payment Methods"},{"body":"","excerpt":"","ref":"/docs/payment-methods/uruguay/uy-apm.html","title":"Alternative Payment Methods"},{"body":"This section shows the available payment methods, currencies, and related information to be taken into account when processing in Brazil.\n","excerpt":"This section shows the available payment methods, currencies, and related information to be taken …","ref":"/docs/payment-methods/brazil.html","title":"Brazil"},{"body":"","excerpt":"","ref":"/docs/payment-methods/central-america/cam-apm.html","title":"Cash"},{"body":"Balance The Balance is the amount of money settled in your account. For Payouts, we have three different types of balances which can be consulted here.\nBanking Connections The Banking Connection is the technology that allows us to send money to a payee regardless of the selected payment method.\nFX Service Foreign Exchange or FX refers to the current rate to convert one country\u0026rsquo;s currency to another. This value is updated according to destination country regulations.\nPayee A Payee is a third party who will receive the money result of your Payout request. The information required for a Payee is their name, document, phone, e-mail address, and bank account.\nPayout Payout refers to the concept of disburse funds to a third party using funds settled in your account.\nPayout fee Refers to the processing cost of the Payout. This cost can be assumed by you (as Payer) or assumed by the Payee by setting a variable in the request.\nSanction screening Sanction screening is the process to let us know if the merchant is making payouts to legally sanctioned persons. This process is important as an Anti-Money Laundering (AML) and Payout limits control.\nThe output of this process determines whether the Payout has to be sent to a manual validation.\n","excerpt":"Balance The Balance is the amount of money settled in your account. For Payouts, we have three …","ref":"/payouts/overview/payout-concepts.html","title":"Concepts"},{"body":"The following diagram represents the statuses of a payout:\nReceived: this is the initial status after the Once you request a payout, we validate the structure of the payout (for Payouts requested through API) and create it in our system. For more information about the structure, refer to Payouts API. Furthermore, we validate that you have enough balance settled in your account before moving the next status. Otherwise, it will be declined.\nValidated: this status indicates that the payout has a valid structure and your account has enough funds to cover the Payout amount and the fee (in case it is assumed by you). During this status we define whether the Payout needs a manual review under two criteria. First, the limit of payments received by the payee and second, the sanction screening process.\nHeld: this status indicates that the payout is under a manual review from our side due to the validations performed in the previous step. The ETC of this status is XX business days.\nPending: this status indicates that the payout and the payee have meet all the validations required and it is about to be sent to the Banking Connections.\nProcessing: the payout has been received by the Banking Connection, the time before moving to Paid status depends on the country and the payment method selected. Click here to learn more.\nPaid: The payout has been processed by the Banking Connection and it has been approved. In this status, your balance has been updated with the transaction values.\nRejected: The payout has been processed by the Banking Connection and it has been rejected. In this status, your balance has been updated with the transaction values.\nDeclined: The payout has been rejected due to structure validation or internal reasons.\n","excerpt":"The following diagram represents the statuses of a payout:\nReceived: this is the initial status …","ref":"/payouts/overview/payout-status.html","title":"Payout status"},{"body":"ID Types The following table shows the available document types you need to configure in the parameter payee.document.type.\nArgentina Abbreviation Document name Individuals / Companies Type Length CUIT Unique Tax Identification Code Companies Numeric 11 CUIL Unique Labor Identification Code Individuals Numeric 11 DNI National Identity Document Individuals Numeric 7-9 Brazil Abbreviation Document name Individuals / Companies Type Length CPF Individuals Registration Individuals Numeric 11* CNPJ National Registry of Legal Entities Company Numeric 14* * Validate verifier-digits\nChile Abbreviation Document name Individuals / Companies Type Length CI Identity Card Individuals Numeric 8 or 9 RUN Unique National Role Individuals Numeric 8 or 9 RUT Individuals Tax Role Individuals Numeric 8 or 9 Colombia Abbreviation Document name Individuals / Companies Type Length CC Citizenship ID Individuals Numeric Between 6 and 10 CE Immigration ID Individuals Numeric Between 6 and 10 NIT Tax Identification Number Companies Numeric Between 8 and 15 Mexico Abbreviation Document name Individuals / Companies Type Length CURP Unique Population Registry Key Individuals Between 8 and 18 RFC Federal Taxpayer Registry Individuals and Companies Between 8 and 18 IFE Federal Electoral Institute Individuals Between 8 and 18 PASSPORT International Travel Document Individuals Between 8 and 18 RESIDENCIA Document of foreigner residing in the country Individuals Between 8 and 18 Peru Abbreviation Document name Individuals / Companies Type Length CE Immigration ID Individuals Numeric 9 DNI National Identity Document Individuals Numeric\nNumeric or Alphanumeric 8\n9 PASSPORT International Travel Document Individuals Between 7 and 18 RUC Single Taxpayer Registry Individuals and Companies 11 Uruguay Abbreviation Document name Individuals / Companies Type Length CI Identity Card Individuals Numeric Between 6 and 8 DE Single Numeric PASSPORT International Travel Document Individuals Alphanumeric RUT Single Tax Role Individuals Numeric 12 Error Codes Error code Description 200 Success 400 Bad Request 401 Unauthorized 409 Conflict 812 Declined by validation for document 813 Declined by validation for account 814 Declined by validation for country 815 Declined by Compliance 816 Reference ID already used.\nThis error is not be displayed in the Payouts console but it is returned via API. 901 Bank account is closed 902 Invalid bank account 903 Invalid bank account type 904 Invalid bank branch 905 Monthly limit exceeded for user 906 Rejected by merchant\u0026rsquo;s request 907 The bank account is unable to receive transfers 908 Invalid beneficiary document 909 Beneficiary name doesn\u0026rsquo;t match bank details 910 PIX key invalid 911 Invalid state change requested 912 Insufficient Balance 999 Error ","excerpt":"ID Types The following table shows the available document types you need to configure in the …","ref":"/payouts/payouts-api/variables.html","title":"Variables"},{"body":"Basic Refer to this section to know some important aspects of the basic data types of the Bamboo Integration.\nString It\u0026rsquo;s a set of characters that can contain any Unicode character. You can define a maximum length for this data type using square brackets, for example string[30] means that the string can contain a maximum of 30 characters. If a string has more characters than the maximum defined, it will be truncated, and processing will continue.\nNumeric Refers to an integer value. You can define a maximum length for this data type using square brackets, for example Numeric[3] means that the number can have a maximum of 3 digits. If the data has a value greater than the specification, an error will be returned.\nAmount Refers to a Numeric field that includes decimals to express the value of a transaction. These fields are always expressed with the integer part plus 2 decimals without punctuation marks between them.\nThe following table shows the values must be codified.\nValue Coded as 100 10000 1.237,52 123752 3.200,5 320050 0,01 1 TimeStamp This data type shows a date / time value that must be expressed in the following format:\n\u0026quot;YYYY-MM-DDTHH:mm:ss.ttt\u0026quot;\nWhere:\nYYYY indicates the year MM indicates the month DD indicates the day T indicates the beginning of the required time section hh indicates the hour (from 0 to 23) mm indicates the minutes ss indicates the seconds ttt indicates the milliseconds Below are examples of how values should be codified:\nValue Coded as 2016/01/12 13:21:48.354 2016-01-12T13:21:48.354 2016/03/31 05:17:00.000 2016-03-31T05:17:00.000 2016/11/28 22:59:59.970 2016-11-28T22:59:59.970 Date This Data type contains an exact date. Unlike the TimeStamp data type, it does not include hours, and is in the following format:\nyyyyMMdd\nBoolean This data type is a logical value (true or false).\nTransactionStatus Indicates the final status of a transaction.\nPossible values:\nTransactionStatusID TransactionStatus 1 Approved 2 Pending 3 Pre-authorized 4 Rejected 5 Paid 6 Cancelled ActionType Indicates the type of action to be performed by the merchant. This data type is useful when processing purchase using the Redirect flow.\nPossible values:\nActionType Action 1 Redirect\nIndicates that you need to make a redirection as the next step in the purchase. 2 PWCapture\nIndicates that it is necessary to capture the CVV of the card. ","excerpt":"Basic Refer to this section to know some important aspects of the basic data types of the Bamboo …","ref":"/docs/getting-started/data-types.html","title":"Data Types"},{"body":"The difference between this form, and Checkout Form mentioned before, is that this must be invoked inside a custom page of the merchant.\nThe integration of this form into your site or app, provides your users a simplified and responsive payment experience that is suitable for both web and mobile applications.\n","excerpt":"The difference between this form, and Checkout Form mentioned before, is that this must be invoked …","ref":"/docs/forms/embedded-checkout-form.html","title":"Embedded Checkout Form"},{"body":"Depending on the contract you have signed with Bamboo Payment (Gateway or Payfac model) and the countries where you process, you can create Local or CrossBorder purchases.\nA Local purchase refers to all purchases in which the currency of the payer and the currency of your store are equal. For example, when your store and your buyer are both located in Uruguay, the purchase is performed in UYU, and you receive the amount also in UYU. A CrossBorder purchase refers to all purchases in which the currency of the payer is different from the currency that you have configured in your store. For example, if your store is in Uruguay, and your buyer is in Colombia, the purchase will be in COP, but you receive the amount in UYU. Refer to the next topics to learn the operations you can perform using the Purchase API.\n","excerpt":"Depending on the contract you have signed with Bamboo Payment (Gateway or Payfac model) and the …","ref":"/docs/purchase-workflow/purchases.html","title":"Purchase operations"},{"body":"Flow diagram Flow description N° Description /EndPoint or Actor 1 The Merchant request the OneTimeToken for redirect flow payment /token/GetRedirectToken 2 The Merchant sends the purchase request as with any other means of payment /purchase 3 Bamboo returns Purchase, with status Pending for Redirection along with a CommerceAction object that contains an external service URL. ActionReason=REDIRECTION_NEEDED_EXTERNAL_SERVICE /purchase response 4 The merchant must redirect customer to external service URL provided in CommerceAction object Commerce Site/Client browser 5 Bamboo takes control and performs necessary actions to redirect the customer to external payment media processor service site to complete payment Bamboo Site/Customer browser 6 The customer follows the steps shown by acquirer’s site in order to complete the payment External Payment Site/Client 7 The response is received by redirection, Bamboo process and update transaction status, and then redirects back to merchant’s response page (According to transaction status) /paymentCallback 8 Bamboo receives async push notification from acquire and notify back to merchant’s notification webhook (the purchase status is updated) /webhook (Merchant) Response URLS As the result of the transaction, it can be iun any of the following status.\nStatus Description Approved Purchase approved. No verification needed. Rejected Purchase rejected. Canceled The purchase customer has been cancelled by the process or and automatic process. Pending The purchase is pending to be paid in a Cash Payment network, or to be confirmed by the payment method processor. Therefore, the following URLs are defined to be sent in the Purchase when the same host to host is created prior to the redirection:\nUrl_Approved → callback url when purchase status is Approved Url_Rejected → callback url when purchase status is Rejected Url_Canceled → callback url when purchase status is Canceled Url_Pending → callback url when purchase status is Pending Url_Notify → webhook notification URL. The Purchase status is notified to this URL once the payment method processor notifies Bamboo. The notification to this URL is a REST POST with JSON payload, instead of redirection. It can also be static and configured by Support Team. Redirect Flow Purchase example { \u0026#34;TrxToken\u0026#34;:\u0026#34;OT__Kg1JdcN4Fz6g7RUCF_xdtbR5n0FVX4IctD__P3BSApY_\u0026#34;, \u0026#34;Capture\u0026#34;:\u0026#34;true\u0026#34;, \u0026#34;Amount\u0026#34;:10000000, \u0026#34;Installments\u0026#34;:1, \u0026#34;Currency\u0026#34;: \u0026#34;CLP\u0026#34;,, \u0026#34;TargetCountryISO\u0026#34;: \u0026#34;CL\u0026#34;, \u0026#34;PaymentMediaId\u0026#34;:106, \u0026#34;Redirection\u0026#34; : { \u0026#34;Url_Approved\u0026#34;: \u0026#34;https://dummystore.com/checkout/approved\u0026#34;, \u0026#34;Url_Rejected\u0026#34;: \u0026#34;https://dummystore.com/checkout/rejected\u0026#34;, \u0026#34;Url_Canceled\u0026#34;: \u0026#34;https://dummystore.com/checkout/canceled\u0026#34;, \u0026#34;Url_Pending\u0026#34;: \u0026#34;https://dummystore.com/checkout/pending\u0026#34;, \u0026#34;Url_Notify\u0026#34;: \u0026#34;https://dummystore.com/checkout/notifications\u0026#34; } } The PaymentMediaId and TrxToken fields are optional but it is mandatory to send one of them depending on the flow you want to use.\nPaymentMediaId: Alternative payment method identifier (transfer, cash and processing that requires customer redirection). This identifier can be obtained by consulting the Payment methods by country section. TrxToken: You can pre-generate the token and proccess by sending it in this field. Redirect response content The redirection callback response contains the PurchaseID and Status, as FORM data (input data).\n\u0026lt;form method=\u0026#34;post\u0026#34; action=\u0026#34;https://dummystore.com/checkout/approved\u0026#34;\u0026gt; \u0026lt;input type=\u0026#34;hidden\u0026#34; id=\u0026#34;PurchaseId\u0026#34; name=\u0026#34;PurchaseId\u0026#34; value=\u0026#34;198742\u0026#34; /\u0026gt; \u0026lt;input type=\u0026#34;hidden\u0026#34; id=\u0026#34;Status\u0026#34; name=\u0026#34;Status\u0026#34; value=\u0026#34;approved\u0026#34; /\u0026gt; \u0026lt;/form\u0026gt; Note There is no validation system, so it is not recommended to take the response as final. Instead, take the PurchaseId and perform a GET request (server to server) to /v1/api//api/Purchase/{ID} to get the full Purchase Object and its final status.\n","excerpt":"Flow diagram Flow description N° Description /EndPoint or Actor 1 The Merchant request the …","ref":"/docs/purchase-workflow/purchases/redirect-purchase.html","title":"Redirect purchases"},{"body":"To navigate to the Payout Balance report, open you Merchant console and expand Payout section in the left menu.\nThe Payouts console has two available options, Payout Reports and Payouts Balance, find the related information in the sections below.\n","excerpt":"To navigate to the Payout Balance report, open you Merchant console and expand Payout section in the …","ref":"/payouts/payouts-merchant-console.html","title":"Payouts console"},{"body":"This section shows the available payment methods, currencies, and related information to be taken into account when processing in Costa Rica, El Salvador, and Nicaragua.\n","excerpt":"This section shows the available payment methods, currencies, and related information to be taken …","ref":"/docs/payment-methods/central-america.html","title":"Central America"},{"body":"The balances available are updated according to the movements performed in your account such as funds deposit or disbursement.\nBalance types You can see the following balances in the Payouts console:\nTotal Balance: corresponds to the total amount of money you have in your account. Processing Balance: corresponds to the amount requested to be disbursed in all your payout. The fee amount of the payouts may be included depending on who will assume the fee (you or your payee) and the model selected. When all the Payouts have reached a terminal (Paid or rejected), the value displayed here is 0. Available Balance: correspond to the amount of money yo have to process more Payouts and ir is the difference between the Total Balance and the Processing Balance. Info If the fee is assumed by the payee, this will not be reflected in any balance type.\nBalance models Bamboo payouts offers you the possibility to see the three balance types in two models:\nSimplified Model: a single balance for Payouts.\nIn this case, both the payout amount and the fee charged are deducted from your global balance. Detailed Model: one balance for Payouts and one for fees.\nIn this case, you have two balances, one to deduct the net amounts from the Payout and another to exclusively deduct the fees charged. Examples To let you understand the concepts of type and model behind the Payout balances, lets make an example.\nLet\u0026rsquo;s assume that you have the following information:\nPayout amount requested 10 USD Fee 2 USD Initial balance 20 USD Initial balance for fee 5 USD Simplified Model - fee assumed by you Balance when the payout is requested\nTotal Balance 20 USD Processing Balance\nPayout amount requested + fee 12 USD Available Balance 8 USD Balance if the payout is paid\nTotal Balance 8 USD Processing Balance - Available Balance 8 USD Balance if the payout is rejected.\nTotal Balance 18 USD Processing Balance - Available Balance 18 USD If the payout is rejected, the process fee is not refunded.\nSimplified Model - fee assumed by the payee Balance when the payout is requested\nTotal Balance 20 USD Processing Balance 10 USD Available Balance 10 USD Balance if the payout is paid\nTotal Balance 10 USD Processing Balance - Available Balance 10 USD Balance if the payout is rejected.\nTotal Balance 20 USD Processing Balance - Available Balance 20 USD Detailed Model - fee assumed by you Balance when the payout is requested\nBalance for Payouts Total Balance 20 USD Processing Balance 10 USD Available Balance 10 USD Balance for fee Total Balance 5 USD Processing Balance 2 USD Available Balance 3 USD Balance if the payout is paid\nBalance for Payouts Total Balance 10 USD Processing Balance - Available Balance 10 USD Balance for fee Total Balance 3 USD Processing Balance - Available Balance 3 USD Balance if the payout is rejected.\nBalance for Payouts Total Balance 20 USD Processing Balance - Available Balance 20 USD Balance for fee Total Balance 3 USD Processing Balance - Available Balance 3 USD If the payout is rejected, the process fee is not refunded.\nDetailed Model - fee assumed by the payee Balance when the payout is requested\nBalance for Payouts Total Balance 20 USD Processing Balance 10 USD Available Balance 10 USD Balance for fee Total Balance 5 USD Processing Balance - Available Balance 5 USD Balance if the payout is paid\nBalance for Payouts Total Balance 10 USD Processing Balance - Available Balance 10 USD Balance for fee Total Balance 5 USD Processing Balance - Available Balance 5 USD Balance if the payout is rejected.\nBalance for Payouts Total Balance 20 USD Processing Balance - Available Balance 20 USD Balance for fee Total Balance 5 USD Processing Balance - Available Balance 5 USD ","excerpt":"The balances available are updated according to the movements performed in your account such as …","ref":"/payouts/overview/payout-balances.html","title":"Payout balances"},{"body":" Endpoint Point your request to any of the following URL according to your needs.\nSTAGE: https://secure-api.stage.bamboopayment.com/v2/api/purchase PROD: https://secure-api.bamboopayment.com/v2/api/purchase Request example { \u0026#34;CardData\u0026#34;: { \u0026#34;CardHolderName\u0026#34;: \u0026#34;John Doe\u0026#34;, \u0026#34;Pan\u0026#34;: \u0026#34;4507990000004905\u0026#34;, \u0026#34;CVV\u0026#34;: \u0026#34;123\u0026#34;, \u0026#34;Expiration\u0026#34;: \u0026#34;08/30\u0026#34;, \u0026#34;Email\u0026#34;: \u0026#34;john.doe@example.com\u0026#34;, \u0026#34;Document\u0026#34;: \u0026#34;74857601\u0026#34; }, \u0026#34;Capture\u0026#34;: true, \u0026#34;Amount\u0026#34;: 15000, \u0026#34;Currency\u0026#34;: \u0026#34;USD\u0026#34;, \u0026#34;TargetCountryISO\u0026#34;:\u0026#34;AR\u0026#34;, \u0026#34;Installments\u0026#34;: 1, \u0026#34;Description\u0026#34;: \u0026#34;Description\u0026#34;, \u0026#34;Customer\u0026#34;: { \u0026#34;BillingAddress\u0026#34;: { \u0026#34;Country\u0026#34;: \u0026#34;BRA\u0026#34;, \u0026#34;City\u0026#34;: \u0026#34;São Paulo\u0026#34;, \u0026#34;State\u0026#34;: \u0026#34;SP\u0026#34;, \u0026#34;PostalCode\u0026#34;: \u0026#34;04538132\u0026#34;, \u0026#34;AddressDetail\u0026#34;: \u0026#34;Brig. Faria Lima Avenue 10th Floor \u0026#34; }, \u0026#34;Email\u0026#34;: \u0026#34;john.dose@example.com\u0026#34;, \u0026#34;DocNumber\u0026#34;: \u0026#34;74857601\u0026#34;, \u0026#34;PhoneNumber\u0026#34;: \u0026#34;+5521987654321\u0026#34;, \u0026#34;FirstName\u0026#34;: \u0026#34;John\u0026#34;, \u0026#34;LastName\u0026#34;: \u0026#34;Doe\u0026#34;, \u0026#34;DocumentTypeId\u0026#34;:4 } } The fields CardData, PaymentMediaId and TrxToken are not required; Nevertheless, one of them must be send depending of which flow to use.\nCardData: Must be used for transactions using non-tokenized cards.\nPaymentMediaId: Identifier of alternative payment method (transference, cash and any flow needing a redirection of the client). This identifier can be found in the Payment Methods by Country section.\nTrxToken: The merchant can generate a token and use it to generate transactions if necessary.\nResponse Example { \u0026#34;Response\u0026#34;: { \u0026#34;PurchaseId\u0026#34;: 139126, \u0026#34;Created\u0026#34;: \u0026#34;2022-12-08T09:22:58.890\u0026#34;, \u0026#34;Order\u0026#34;: \u0026#34;24542341343\u0026#34;, \u0026#34;Transaction\u0026#34;: { \u0026#34;TransactionID\u0026#34;: 149462, \u0026#34;Created\u0026#34;: \u0026#34;2022-12-08T09:22:58.857\u0026#34;, \u0026#34;AuthorizationDate\u0026#34;: \u0026#34;2022-12-08T09:23:12.060\u0026#34;, \u0026#34;TransactionStatusId\u0026#34;: 1, \u0026#34;Status\u0026#34;: \u0026#34;Approved\u0026#34;, \u0026#34;ErrorCode\u0026#34;: null, \u0026#34;Description\u0026#34;: \u0026#34;100 ACCEPT\u0026#34;, \u0026#34;ApprovalCode\u0026#34;: \u0026#34;831000\u0026#34;, \u0026#34;Steps\u0026#34;: [ { \u0026#34;Step\u0026#34;: \u0026#34;Generic External\u0026#34;, \u0026#34;Created\u0026#34;: \u0026#34;2022-12-08T09:23:05.917\u0026#34;, \u0026#34;Status\u0026#34;: \u0026#34;Authorization OK - Step 1\u0026#34;, \u0026#34;ResponseCode\u0026#34;: \u0026#34;200\u0026#34;, \u0026#34;ResponseMessage\u0026#34;: \u0026#34;OK\u0026#34;, \u0026#34;Error\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;AuthorizationCode\u0026#34;: null, \u0026#34;UniqueID\u0026#34;: null, \u0026#34;AcquirerResponseDetail\u0026#34;: \u0026#34;\u0026#34; }, { \u0026#34;Step\u0026#34;: \u0026#34;Generic External\u0026#34;, \u0026#34;Created\u0026#34;: \u0026#34;2022-12-08T09:23:12.033\u0026#34;, \u0026#34;Status\u0026#34;: \u0026#34;Authorization OK\u0026#34;, \u0026#34;ResponseCode\u0026#34;: \u0026#34;100\u0026#34;, \u0026#34;ResponseMessage\u0026#34;: \u0026#34;ACCEPT\u0026#34;, \u0026#34;Error\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;AuthorizationCode\u0026#34;: \u0026#34;831000\u0026#34;, \u0026#34;UniqueID\u0026#34;: null, \u0026#34;AcquirerResponseDetail\u0026#34;: \u0026#34;\u0026#34; } ] }, \u0026#34;Capture\u0026#34;: true, \u0026#34;Amount\u0026#34;: 2700, \u0026#34;OriginalAmount\u0026#34;: 2700, \u0026#34;TaxableAmount\u0026#34;: null, \u0026#34;Tip\u0026#34;: 0, \u0026#34;Installments\u0026#34;: 1, \u0026#34;Currency\u0026#34;: \u0026#34;UYU\u0026#34;, \u0026#34;Description\u0026#34;: \u0026#34;56341245341\u0026#34;, \u0026#34;Customer\u0026#34;: { \u0026#34;CustomerId\u0026#34;: 61046, \u0026#34;Created\u0026#34;: \u0026#34;2022-12-05T17:24:43.720\u0026#34;, \u0026#34;CommerceCustomerId\u0026#34;: null, \u0026#34;Owner\u0026#34;: \u0026#34;Anonymous\u0026#34;, \u0026#34;Email\u0026#34;: \u0026#34;b@s.com\u0026#34;, \u0026#34;Enabled\u0026#34;: true, \u0026#34;ShippingAddress\u0026#34;: null, \u0026#34;BillingAddress\u0026#34;: { \u0026#34;AddressId\u0026#34;: 59853, \u0026#34;AddressType\u0026#34;: 2, \u0026#34;Country\u0026#34;: \u0026#34;URY\u0026#34;, \u0026#34;State\u0026#34;: \u0026#34;RIVERA\u0026#34;, \u0026#34;AddressDetail\u0026#34;: \u0026#34;test 1 \u0026#34;, \u0026#34;PostalCode\u0026#34;: \u0026#34;40000\u0026#34;, \u0026#34;City\u0026#34;: \u0026#34;Rivera\u0026#34; }, \u0026#34;Plans\u0026#34;: null, \u0026#34;AdditionalData\u0026#34;: null, \u0026#34;PaymentProfiles\u0026#34;: [ ], \u0026#34;CaptureURL\u0026#34;: null, \u0026#34;UniqueID\u0026#34;: null, \u0026#34;URL\u0026#34;: \u0026#34;Customer/61046\u0026#34;, \u0026#34;FirstName\u0026#34;: \u0026#34;John\u0026#34;, \u0026#34;LastName\u0026#34;: \u0026#34;Doe\u0026#34;, \u0026#34;DocNumber\u0026#34;: \u0026#34;74857601\u0026#34;, \u0026#34;DocumentTypeId\u0026#34;: null, \u0026#34;PhoneNumber\u0026#34;: \u0026#34;+59899999999\u0026#34; }, \u0026#34;RefundList\u0026#34;: null, \u0026#34;PlanID\u0026#34;: null, \u0026#34;UniqueID\u0026#34;: null, \u0026#34;AdditionalData\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;CustomerUserAgent\u0026#34;: null, \u0026#34;CustomerIP\u0026#34;: null, \u0026#34;URL\u0026#34;: \u0026#34;https://api.bamboopayment.com/v1/api/Purchase/139126\u0026#34;, \u0026#34;Acquirer\u0026#34;: { \u0026#34;AcquirerID\u0026#34;: 90, \u0026#34;Name\u0026#34;: \u0026#34;VisaNetUYv2\u0026#34;, \u0026#34;CommerceNumber\u0026#34;: null }, \u0026#34;CommerceAction\u0026#34;: null, \u0026#34;PurchasePaymentProfileId\u0026#34;: 62872 }, \u0026#34;Errors\u0026#34;: [] } ","excerpt":"Endpoint Point your request to any of the following URL according to your needs.\nSTAGE: …","ref":"/docs/purchase-workflow/purchases/direct-purchase.html","title":"Direct purchases"},{"body":" Clear Argentina Payment Method Type Flow Visa Credit Card API MasterCard Credit Card API American Express Credit Card API Visa Debit Debit Card API Visa Prepaid Credit Card API PassCard Credit Card API MasterCard Prepaid Credit Card API Cabal Credit Card API Tarjeta Naranja Credit Card API Pago Fácil Cash Payment API Transferencias 3.0 Bank Transfer API Brazil Payment Method Type Flow Visa Credit and Debit Card API Mastercard Credit and Debit Card API American Express Credit and Debit Card API Diners Credit and Debit Card API PIX Bank Transfer API Boleto Cash Payment API Hipercard Credit and Debit Card API Elo Credit and Debit Card API Aura Credit and Debit Card API Chile Visa is not available for crossborder purchases.\nPayment Method Type Flow Khipu Bank Transfer Redirect Klap Efectivo Cash Payment Redirect Visa Debit Card Redirect Mastercard Debit Card Redirect Visa Credit Card API Mastercard Credit Card API American Express Credit Card API Colombia Payment Method Type Flow Visa Credit and Debit Card API API Credit and Debit Card API American Express Credit and Debit Card API Diners Club Credit and Debit Card API Apostar Cash Payment API Bancolombia Cash Payment API Efecty Cash Payment API Gana Cash Payment API Puntored Cash Payment API Superpagos Cash Payment API SuSuerte Cash Payment API SuRed Cash Payment API Nequi QR Bank Transfer API Nequi Push Bank Transfer API PSE Bank Transfer Redirect Costa Rica Payment Method Type Flow PuntoXpress Cash Payment API Ecuador Payment Method Type Flow Cash Payment Cash Payment API Bank Transfer Bank Transfer API El Salvador Payment Method Type Flow PuntoXpress Cash Payment API Mexico Payment Method Type Flow Paynet Cash Payment API Bank Transfer Bank Transfer API Oxxo Cash Payment API Visa Credit and Debit Card Redirect Mastercard Credit and Debit Card Redirect American Express Credit and Debit Card Redirect Carnet Credit and Debit Card Redirect Nicaragua Payment Method Type Flow PuntoXpress Cash Payment API Paraguay Payment Method Type Flow Visa Credit Card API Mastercard Credit and Debit Card API American Express Credit and Debit Card API Visa Debit Debit Card API Bancard Check Credit Card API Credifielco Credit Card API Infonet Debit Card API PagoExpress Cash Payment API Peru Payment Method Type Flow Cash Payment Cash Payment API Bank Transfer Bank Transfer API Uruguay Payment Method Type Flow Visa Credit Card API Mastercard Credit Card API American Express Credit Card API OCA Credit Card API Abitab Cash Payment API Visa Débito Debit Card API Visa Prepago Credit Card API Creditel Credit Card API Créditos Directos Credit Card API RedPagos Cash Payment API PassCard Credit Card API MasterCard Prepago Credit Card API Líder Credit Card API Club del Este Credit Card API Cabal Credit Card API Anda Credit Card API Red Pagos Payfac Cash Payment API E-Brou Bank Transfer Redirect Santander Bank Transfer Redirect Scotiabank Bank Transfer Redirect Itaú Bank Transfer Redirect ","excerpt":"Clear Argentina Payment Method Type Flow Visa Credit Card API MasterCard Credit Card API American …","ref":"/docs/getting-started/payment-methods.html","title":"Payment methods"},{"body":"","excerpt":"","ref":"/payouts/payouts-api.html","title":"Payouts API"},{"body":"This section shows the available payment methods, currencies, and related information to be taken into account when processing in Chile.\n","excerpt":"This section shows the available payment methods, currencies, and related information to be taken …","ref":"/docs/payment-methods/chile.html","title":"Chile"},{"body":"When a buyer performs a purchase, the amount of it can be modified for several reasons:\nCurrency conversion (USD to local currency of the destination country) Commissions to be paid by the customer Taxes etc. For example, in Argentina there are different taxes that affect the final amount and, as a consequence, the merchant cannot show the real amount that will be charged until the purchase is completed.\nAs a solution, we created a tool that allows the merchant to preview the amount that the customer will be charged so that they can inform it prior to executing the purchase.\nThe following example shows the way suggested to the merchants to display the preview in Argentina.\nRequest To use the purchase preview, you must point to the following endpoint:\nGET https://api.stage.bamboopayment.com/v1/api/purchase/preview\nIn the header, the Authorization parameter must be configured by concatenating the word Basic, a space and the Private Key of the merchant.\nExample of the request { \u0026#34;baseAmount\u0026#34;: 100, \u0026#34;currency\u0026#34;: \u0026#34;USD\u0026#34;, \u0026#34;countryIso\u0026#34;: \u0026#34;AR\u0026#34;, \u0026#34;paymentMediaId\u0026#34;: 1, \u0026#34;customer\u0026#34;: { \u0026#34;documentTypeId\u0026#34;: 5, \u0026#34;docNumber\u0026#34;: \u0026#34;20222222223\u0026#34;, \u0026#34;state\u0026#34;: \u0026#34;Buenos Aires\u0026#34;, \u0026#34;postalCode\u0026#34;: \u0026#34;8512\u0026#34; } } Where: Parameter Description Type Required baseAmount Amount to be paid before taxes Integer Yes currency Currency of the amount defined in baseAmount Yes countryIso Country in ISO 3166-2 format String Yes paymentMediaId Alternative Payment Method identifier. This identifier can be obtained by consulting the Payment Metods by country section in the documentation. String No customer Payer Information Object No* *Required for Argentina customer.documentTypeId Payer Document Type String No customer.docNumber Payer document number String No customer.state Payer state String No* *For Argentina, this field is mandatory and you must include the corresponding value using the table displayed in the next section. customer.postalCode Payer Zip Code String No Response Next, we show an example of the response to the request shown previously\nExample response { \u0026#34;Response\u0026#34;: { \u0026#34;Success\u0026#34;: true, \u0026#34;Data\u0026#34;: { \u0026#34;Date\u0026#34;: \u0026#34;2023-03-30T20:35:39.3139535+00:00\u0026#34;, \u0026#34;Currency\u0026#34;: \u0026#34;ARS\u0026#34;, \u0026#34;ExchangeRate\u0026#34;: { \u0026#34;Value\u0026#34;: 402.090000, \u0026#34;FromCurrencyIsoCode\u0026#34;: \u0026#34;USD\u0026#34;, \u0026#34;ToCurrencyIsoCode\u0026#34;: \u0026#34;ARS\u0026#34;, \u0026#34;TypeCode\u0026#34;: \u0026#34;Median\u0026#34;, \u0026#34;Date\u0026#34;: \u0026#34;2023-03-29T19:00:00\u0026#34; }, \u0026#34;TotalAmount\u0026#34;: 58865.98, \u0026#34;TaxDetails\u0026#34;: [ { \u0026#34;TaxCode\u0026#34;: \u0026#34;AR-VAT-DIGITAL\u0026#34;, \u0026#34;TaxName\u0026#34;: \u0026#34;VAT\u0026#34;, \u0026#34;TaxAmount\u0026#34;: 9650.16, \u0026#34;TaxPercentage\u0026#34;: 20.0, \u0026#34;ResponsableType\u0026#34;: \u0026#34;Merchant\u0026#34; }, { \u0026#34;TaxCode\u0026#34;: \u0026#34;AR-INGR-BRUTOS\u0026#34;, \u0026#34;TaxName\u0026#34;: \u0026#34;II.BB\u0026#34;, \u0026#34;TaxAmount\u0026#34;: 965.016, \u0026#34;TaxPercentage\u0026#34;: 2.0, \u0026#34;ResponsableType\u0026#34;: \u0026#34;Merchant\u0026#34; } ], \u0026#34;AmountDetails\u0026#34;: [ { \u0026#34;CurrencyCode\u0026#34;: \u0026#34;ARS\u0026#34;, \u0026#34;AmountCategoryCode\u0026#34;: \u0026#34;EfEx\u0026#34;, \u0026#34;Amount\u0026#34;: 8041.8, \u0026#34;Sign\u0026#34;: \u0026#34;Debit\u0026#34;, \u0026#34;ResponsableType\u0026#34;: \u0026#34;Buyer\u0026#34; }, { \u0026#34;CurrencyCode\u0026#34;: \u0026#34;ARS\u0026#34;, \u0026#34;AmountCategoryCode\u0026#34;: \u0026#34;Gross\u0026#34;, \u0026#34;Amount\u0026#34;: 40209, \u0026#34;Sign\u0026#34;: \u0026#34;Debit\u0026#34;, \u0026#34;ResponsableType\u0026#34;: \u0026#34;Buyer\u0026#34; } ] } }, \u0026#34;Errors\u0026#34;: null } The parameters in the response are the following:\nParameter Type Description Success Boolean Determines if the result of the operation was successful. Data.Date Date and time Date the process was executed. Data.Currency String ISO code of the merchant\u0026rsquo;s currency. That is, the destination currency in the conversion. Data.ExchangeRate.value Number Amount that the origin currency is equivalent to in the destination currency. Data.ExchangeRate.FromCurrencyIsoCode Strng ISO code of the origin currency. Data.ExchangeRate.ToCurrencyIsoCode Strng ISO code of the destination currency. Data.ExchangeRate.TypeCode String Not used. Data.ExchangeRate.Date Date and time Date of the last update of the conversion rate. Data.TotalAmount Number Total final amount of the purchase in local currency after applying the values that affect it (taxes, conversions, etc.). Data.TaxDetails Object Contains the detail of the taxes that apply to the transaction. Data.AmountDetails Object Contains the detail of the transaction subtotals. Object TaxDetails Next, we explain the sub-parameters of the TaxDetails object\nParameter Type Description TaxCode String Tax code defined by Bamboo Payment. TaxName String Name of the tax that is applied. TaxAmount Number Total value of the tax. TaxPercentage Percentage Percentage corresponding to the tax. ResponsibleType String Indicates whether the party responsible for the tax is the merchant (Merchant) or the payer (Buyer). Note In the example of the request, two taxes are specified for Argentina: VAT corresponding to the VAT of Digital Services and II.BB corresponding to the Gross Income tax.\nObject AmountDetails Next, we explain the sub-parameters of the AmountDetails object\nParameter Type Description CurrencyCode String ISO code of the currency of the amount. AmountCategoryCode String Amount category. Amount Number Value of the amount. Sign String Indicates if the amount is a debit or credit movement. ResponsibleType String Indicates whether the party responsible for the tax is the merchant (Merchant) or the payer (Buyer). ","excerpt":"When a buyer performs a purchase, the amount of it can be modified for several reasons:\nCurrency …","ref":"/docs/purchase-workflow/purchases/purchase-preview.html","title":"Purchase Preview"},{"body":"Using Postman We have a developed collection in Postman that allows you to use the different endpoints of our API.\n","excerpt":"Using Postman We have a developed collection in Postman that allows you to use the different …","ref":"/docs/getting-started/test-our-services.html","title":"Test our services"},{"body":"Customer Type Regardless of the flow type, you can have either Anonymous o Registered customers. Anonymous customers are those who are not registered on the site and make a one-time purchase, and the registered customers are clients that are registered in the website, so can be identified and have extra functionalities such as recurrences.\nFlow type There are two different workflows that can be used to authorize a purchase:\nAPI Redirect Note Flow type depends on each payment method, it\u0026rsquo;s specified in the payment methods table by country in the column FLOW.\nAPI flow When invoking the API to create a purchase, a final or partial status will be obtained, directly in the invocation response.\nFor purchases using API, you can use any of the following options:\nPurchase creation, which can be local or CrossBorder. Direct purchase Purchase preview Redirect flow When invoking the API to create a purchase, a CommerceAction will be obtained, which indicates that the Merchant must take an action to proceed with the payment. In this case, a URL associated with the CommerceAction is returned to which the customer must be redirected to continue with the payment.\nFor Redirect purchase, refer to Redirect flow payments.\n","excerpt":"Customer Type Regardless of the flow type, you can have either Anonymous o Registered customers. …","ref":"/docs/purchase-workflow.html","title":"Purchase API"},{"body":" Clear HTTP Codes Code Description Usage 200 Ok La solicitud fue procesada correctamente. 400 Bad Request La solicitud está mal formada o falta algún parámetro obligatorio. 401 Unauthorized Fallo de autenticación. 403 Forbidden No tiene permisos para realizar la operación solicitada. 404 Not Found El recurso solicitado no fue encontrado. 405 Method not Allowed Request por método incorrecto (ej. GET en lugar de POST). 408 Request Timeout No se pudo completar el pedido en el tiempo máximo configurado. 500 Internal Server Error Ocurrió un error en el servicio. 503 Service Unavailable El servicio está en mantenimiento o experimentando problemas de acceso. Error Codes Tokenization service errors Tokenization errors always starts with TK.\nCode Message Description Possible solution TK001 INVALID_CARD_PAN The card number entered is incorrect. TK002 INVALID_CVV The CVV number entered is incorrect. TK003 INVLALID_EXPIRATION_DATE The card expiration date is incorrect. TK004 INVALID_SESSION_IDENTIFIER An invalid session ID was sent in a token request. TK005 INVALID_EMAIL An email with incorrect format was entered. TK006 EXPIRED_TOKEN The token (One-Time type) has already been used or is expired. TK007 INVALID_PAYMENT_MEDIA Means of payment does not match what was expected. TK008 ISSUER_BANK_NOT_MATCH Issuer bank does not match the expected. TK009 INVALID_ACTIVATION_CODE Token activation code is invalid. TK010 INVALID_COMMERCE_TOKEN Commerce Token is invalid. TK011 CUSTOMER_NOT_FOUND The specified customer is not valid. TK012 TOKEN_ACTIVATION_ERROR Error while activating token. TK013 TOKEN_REGISTRY_VOID_ERROR Error in registration process. TK014 TOKEN_PAYMENT_MEDIA_DISABLED Means of payment disabled. TK015 TOKEN_PAYMENT_MEDIA_UNAVAILABLE Means of payment not available for the Commerce TK016 PAYMENT_MEDIA_REGISTRY_FAILS An error occurred in the process of registering the means of payment. TK017 INVALID_DOCUMENT_NUMBER Invalid document TK018 INVALID_DOCUMENT_TYPE Invalid document type TK999 UNKNOWN_ERROR Unknown error. Purchase service errors Purchase errors always starts with PR.\nCode Message Description Possible solution PR001 INVALID_TOKEN The informed token is invalid, expired or does not correspond to the commerce. PR002 INVALID_ORDER The order number is invalid. PR003 INVALID_AMOUNT The reported amount is invalid. PR004 INVALID_CURRENCY The reported currency is invalid. PR005 INVALID_INVOICE The invoice number is invalid (it must be numeric). PR006 INVALID_PURCHASE_IDENTIFIER The Purchase identifier is invalid. PR007 INVALID_TRANSACTION_IDENTIFIER Invalid TransactionID PR008 PURCHASE_NOT_FOUND The requested purchase cannot be found. PR009 INVALID_PURCHASE_STATE The current purchase state does not allow the requested operation. PR010 TAXABLE_AMOUNT_REQUIRED The TaxableAmount field is required. PR011 INVOICE_REQUIRED The Invoice filed is required. PR012 INVALID_CAPTURED_CVV_REQUIRED Capture of the card verification code is required. PR013 INVALID_INSTALLMENTS Selected installments for the purchase are invalid for the card entered. PR014 INVALID_DESCRIPTION_LENGTH Invalid parameter length description. PR015 INVALID_CUSTOMER_USER_AGENT_EMPTY UserAgent parameter is empty. PR016 INVALID_CUSTOMER_IP_EMPTY CustomerIP parameter is empty. PR017 TAXABLE_AMOUNT_GREATER_THAN_AMOUNT The field TaxableAmount cannot be greater than the purchase total amount. PR018 `PR_DATE_NEEDED To filter by dates, you must enter value for From and To parameters. PR019 EXCEED_DATE_RANGE The search period cannot exceed the following number of days. PR020 INVALID_DOCUMENT_NUMBER Invalid registered document PR021 NOT_ALLOW_PARTIAL_REFUND Partial refunds are not allowed for the payment method used. ","excerpt":"Clear HTTP Codes Code Description Usage 200 Ok La solicitud fue procesada correctamente. 400 Bad …","ref":"/docs/getting-started/error-codes.html","title":"Error Codes"},{"body":"This section shows the available payment methods, currencies, and related information to be taken into account when processing in Colombia.\n","excerpt":"This section shows the available payment methods, currencies, and related information to be taken …","ref":"/docs/payment-methods/colombia.html","title":"Colombia"},{"body":"","excerpt":"","ref":"/docs/forms.html","title":"Forms"},{"body":"","excerpt":"","ref":"/docs/payment-methods.html","title":"Countries and payment methods"},{"body":"This section shows the available payment methods, currencies, and related information to be taken into account when processing in Ecuador.\n","excerpt":"This section shows the available payment methods, currencies, and related information to be taken …","ref":"/docs/payment-methods/ecuador.html","title":"Ecuador"},{"body":"This section shows the available payment methods, currencies, and related information to be taken into account when processing in Mexico.\n","excerpt":"This section shows the available payment methods, currencies, and related information to be taken …","ref":"/docs/payment-methods/mexico.html","title":"Mexico"},{"body":"This section shows the available payment methods, currencies, and related information to be taken into account when processing in Paraguay.\n","excerpt":"This section shows the available payment methods, currencies, and related information to be taken …","ref":"/docs/payment-methods/paraguay.html","title":"Paraguay"},{"body":"This section shows the available payment methods, currencies, and related information to be taken into account when processing in Peru.\n","excerpt":"This section shows the available payment methods, currencies, and related information to be taken …","ref":"/docs/payment-methods/peru.html","title":"Peru"},{"body":"This section shows the available payment methods, currencies, and related information to be taken into account when processing in Uruguay.\n","excerpt":"This section shows the available payment methods, currencies, and related information to be taken …","ref":"/docs/payment-methods/uruguay.html","title":"Uruguay"},{"body":"","excerpt":"","ref":"/payouts.html","title":"Payouts"},{"body":" International and local credit/debit cards Bank transfers Cash payments E-wallets Available countries Maximize market coverage with local payment solutions in MM countries across Latin America.\nGlobal companies are taking advantage of exponential eCommerce growth in Latin America by connecting to Local Payment methods through Bamboo’s single API.\n","excerpt":"International and local credit/debit cards Bank transfers Cash payments E-wallets Available …","ref":"/docs.html","title":"Payins"},{"body":"","excerpt":"","ref":"/index.json","title":""},{"body":"","excerpt":"","ref":"/search.html","title":"Search Results"},{"body":"","excerpt":"","ref":"/","title":"TechOS"}]